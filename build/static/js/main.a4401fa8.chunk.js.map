{"version":3,"sources":["components/Posts/Post/styles.js","API.js","store/actionTypes.js","store/actions/entries.js","utility.js","components/Posts/Post/Post.js","components/Forms/styles.js","components/Forms/entryForm.js","svg/PinIcon.js","components/Posts/Posts.js","components/Markers/AddMarker.js","components/Notify/Notify.js","containers/Map.js","components/UserInfo/FloatingUser.js","components/UserInfo/logo.png","components/UserInfo/UserInfo.js","containers/Home.js","components/Forms/SignInForm.js","containers/SignIn.js","App.js","store/reducers/changes.js","store/reducers/entries.js","theme.js","index.js"],"names":["useStyles","makeStyles","theme","cardBody","padding","flex","WebkitBoxFlex","position","minWidth","divider","width","margin","root","maxWidth","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","popup","API_URL","getAuth","axios","get","headers","localStorage","getItem","signOut","post","fetchLogEntries","GET_AUTH_START","GET_AUTH_SUCCESS","GET_AUTH_FAIL","SIGN_IN_START","SIGN_IN_SUCCESS","SIGN_IN_FAIL","SHOW_POPUP","SET_IS_EDITING","UPDATE_VIEWPORT","UPDATE_FORM_DATA","SET_ADD_ENTRY_LOCATION","CLEAR_FORM_DATA","CLOSE_NOTIFICATION","TOGGLE_USER_DRAWER","FETCH_ENTRIES_START","FETCH_ENTRIES_SUCCESS","FETCH_ENTRIES_FAIL","POST_ENTRY_START","POST_ENTRY_SUCCESS","POST_ENTRY_FAIL","POST_EDIT_START","POST_EDIT_SUCCESS","POST_EDIT_FAIL","DELETE_POST_START","DELETE_POST_SUCCESS","DELETE_POST_FAIL","signinStart","type","actionTypes","signinSuccess","user","signinFail","error","fetchEntriesSuccess","entries","showPopupHandler","value","dispatch","showPopupState","toggleDrawer","open","setIsEditingAction","setIsEditing","clearFormFeilds","updateViewport","nextViewport","updateViewportState","updateFormFieldValue","fieldName","newValue","updateFormData","setAddEntryLocation","location","addEntryLocationState","handleCloseNotification","api","then","data","console","log","catch","err","signInAndSignOutAction","details","isSignup","credentials","errorMsg","response","msg","setItem","token","fetchEntriesAction","postEntryAction","entry","history","push","editEntryAction","editedEntry","deletePostAction","id","_id","objectUpdate","prevObject","currObject","initFormData","title","description","comments","image","rating","latitude","longitude","zoom","visitDate","initViewport","Post","postDetails","classes","useDispatch","useState","zoomed","setZoomed","deletePost","a","Card","className","style","CardMedia","CardContent","ListItemIcon","onClick","view","LocationOn","color","paddingRight","Typography","variant","component","Divider","split","Box","mb","borderColor","alignItems","Rating","readOnly","max","IconButton","Edit","bind","Delete","spacing","opacity","paper","form","display","flexWrap","justifyContent","fileInput","buttonSubmit","marginBottom","disabledButton","withoutLabel","marginTop","textField","Form","props","state","useSelector","entriesState","useEffect","isEditing","field","oldData","viewport","handleSubmit","e","preventDefault","editPost","newPost","formEntryData","onChangeEntry","event","name","parseInt","target","Paper","autoComplete","noValidate","onSubmit","TextField","label","fullWidth","onChange","InputLabelProps","shrink","multiple","onDone","base64","align","defaultValue","Button","size","disabled","valid","isValid","loading","PinIcon","isAddMarker","showPopup","stroke","viewBox","strokeWidth","fill","strokeLinecap","strokeLinejoin","d","cx","cy","r","Posts","markers","closePopup","length","map","closeButton","sortByDepth","closeOnClick","dynamicPosition","onClose","anchor","AddMarker","addMarker","addEntryLocation","Notify","Snackbar","autoHideDuration","reason","elevation","severity","message","withRouter","children","React","longitudeState","setLongitudeState","isAuthenticated","clearInterval","setInterval","notification","LinearProgress","zIndex","mapStyle","mapboxApiAccessToken","process","onViewportChange","getViewPort","onDblClick","lngLat","showAddMarkerPopup","dragPan","right","showCompass","FloatingUser","openDrawer","btn","left","top","Fab","AccountCircle","drawerWidth","window","innerWidth","hide","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","content","flexGrow","easing","sharp","leavingScreen","contentShift","easeOut","enteringScreen","nested","paddingLeft","UserInfo","useTheme","collapseUser","entriesCollapse","values","setValues","handleValueChange","Drawer","List","ListItem","button","alt","src","logo","ListItemText","primary","direction","ChevronLeft","ChevronRight","secondary","email","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","disablePadding","removeItem","ExitToAppRounded","showPost","Avatar","password","confirmPassword","showPassword","handleChange","prop","Grid","container","handleFormSubmittion","placeholder","FormControlLabel","control","Checkbox","icon","VisibilityOff","checkedIcon","Visibility","SignIn","body","App","routes","path","render","to","Home","action","closeNotification","authStart","authSuccess","authFail","fetchEntriesStart","fetchEntriesFail","postEntryStart","postEntrySuccess","postEntryFail","editPostStart","editPostSuccess","editPostFail","deletePostStart","deletePostSuccess","deletePostFail","initialState","displayViewport","reducer","changes","createMuiTheme","palette","light","main","text","background","default","typography","fontFamily","join","h1","fontSize","wordSpacing","letterSpacing","h5","h4","textAlign","body1","textTransform","fontWeight","require","createBrowserHistory","reducers","combineReducers","entriesReducer","composeEnhancers","compose","store","createStore","applyMiddleware","thunk","app","ThemeProvider","ReactDom","document","getElementById"],"mappings":"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","file":"static/js/main.a4401fa8.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\r\nimport { red } from '@material-ui/core/colors';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    cardBody: {\r\n      padding: \"0.9375rem 20px\",\r\n      flex: \"1 1 auto\",\r\n      WebkitBoxFlex: \"1\",\r\n      position: \"relative\",\r\n      minWidth: 300\r\n    },\r\n    divider: {\r\n      width: '100%',\r\n      margin: '5px 0px'\r\n    },\r\n    root: {\r\n      maxWidth: 345,\r\n    },\r\n    media: {\r\n      height: 0,\r\n      paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n      transform: 'rotate(0deg)',\r\n      marginLeft: 'auto',\r\n      transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n      }),\r\n    },\r\n    expandOpen: {\r\n      transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n      backgroundColor: red[500],\r\n    },\r\n    popup: {\r\n      backgroundColor: '#292929',\r\n      padding: 0,\r\n      margin: 0\r\n    }\r\n  }));\r\n\r\n  export default useStyles;","import axios from 'axios';\r\n\r\nconst API_URL = 'https://map-log.herokuapp.com/api';\r\n\r\nexport const getAuth = axios.get(`${API_URL}/get-user`, {\r\n    headers: {\r\n        \"x-access-token\": localStorage.getItem('token')\r\n    }\r\n});\r\n\r\nexport const signIn = credentials => axios.post(`${API_URL}/sign-in`, credentials);\r\n\r\nexport const signUp = credentials => axios.post(`${API_URL}/sign-up`, credentials);\r\n\r\nexport const signOut = axios.post(`${API_URL}/sign-out`);\r\n\r\nexport const fetchLogEntries = axios.get(`${API_URL}/logs`, {\r\n    headers: {\r\n        \"x-access-token\": localStorage.getItem('token')\r\n    }\r\n});\r\n\r\nexport const postNewLogEntry = entry => axios.post(`${API_URL}/logs`, entry, {\r\n    headers: {\r\n        \"x-access-token\": localStorage.getItem('token')\r\n    }\r\n});\r\n\r\nexport const editPost = entry => axios.post(`${API_URL}/logs/edit`, entry, {\r\n    headers: {\r\n        \"x-access-token\": localStorage.getItem('token')\r\n    }\r\n});\r\n\r\nexport const deletePost = id => axios.post(`${API_URL}/logs/delete`, {_id: id}, {\r\n    headers: {\r\n        \"x-access-token\": localStorage.getItem('token')\r\n    }\r\n});","//AUTH\r\nexport const GET_AUTH_START = 'GET_AUTH_START';\r\nexport const GET_AUTH_SUCCESS = 'GET_AUTH_SUCCESS';\r\nexport const GET_AUTH_FAIL = 'GET_AUTH_FAIL';\r\n\r\nexport const SIGN_IN_START = 'SIGN_IN_START';\r\nexport const SIGN_IN_SUCCESS = 'SIGN_IN_SUCCESS';\r\nexport const SIGN_IN_FAIL = 'SIGN_IN_FAIL';\r\n\r\nexport const SIGN_OUT_START = 'SIGN_IN_START';\r\nexport const SIGN_OUT_SUCCESS = 'SIGN_IN_SUCCESS';\r\nexport const SIGN_OUT_FAIL = 'SIGN_IN_FAIL';\r\n\r\n//Toggle states\r\nexport const SHOW_POPUP = 'SHOW_POPUP';\r\nexport const SET_IS_EDITING = 'SET_IS_EDITING';\r\nexport const UPDATE_VIEWPORT = 'UPDATE_VIEWPORT';\r\nexport const UPDATE_FORM_DATA = 'UPDATE_FORM_DATA';\r\nexport const SET_ADD_ENTRY_LOCATION = 'SET_ADD_ENTRY_LOCATION';\r\nexport const CLEAR_FORM_DATA = 'CLEAR_FORM_DATA';\r\nexport const CLOSE_NOTIFICATION = 'CLOSE_NOTIFICATION';\r\nexport const TOGGLE_USER_DRAWER = 'TOGGLE_USER_DRAWER';\r\n\r\n/**\r\n * ----------------- ASYNCHRONOUS ACTIONS -----------------\r\n */\r\n//FETCH ACTION\r\nexport const FETCH_ENTRIES_START = 'FETCH_ENTRIES_START';\r\nexport const FETCH_ENTRIES_SUCCESS = 'FETCH_ENTRIES_SUCCESS';\r\nexport const FETCH_ENTRIES_FAIL = 'FETCH_ENTRIES_FAIL';\r\n\r\n//POST ACTION\r\nexport const IS_ADDING_MARK = 'IS_ADDING_MARK';\r\nexport const POST_ENTRY_START = 'POST_ENTRY_START';\r\nexport const POST_ENTRY_SUCCESS = 'POST_ENTRY_SUCCESS';\r\nexport const POST_ENTRY_FAIL = 'POST_ENTRY_FAIL';\r\n\r\n//EDIT ACTION\r\nexport const IS_EDITING_ENTRY = 'IS_EDITING_ENTRY';\r\nexport const POST_EDIT_START = 'POST_EDIT_START';\r\nexport const POST_EDIT_SUCCESS = 'POST_EDIT_SUCCESS';\r\nexport const POST_EDIT_FAIL = 'POST_EDIT_FAIL';\r\n\r\n//DELETE ACTION\r\nexport const DELETE_POST_START = 'DELETE_POST_START';\r\nexport const DELETE_POST_SUCCESS = 'DELETE_POST_SUCCESS';\r\nexport const DELETE_POST_FAIL = 'DELETE_POST_FAIL';","import { history } from '../../index';\r\n\r\nimport * as api from '../../API';\r\nimport * as actionTypes from '../actionTypes';\r\n\r\n//Auth action states\r\nconst authStart = () => ({ type: actionTypes.GET_AUTH_START});\r\nconst authSuccess = user => ({ type: actionTypes.GET_AUTH_SUCCESS, user });\r\nconst authFail = error => ({ type: actionTypes.GET_AUTH_FAIL, error });\r\n\r\nconst signinStart = () => ({ type: actionTypes.SIGN_IN_START});\r\nconst signinSuccess = user => ({ type: actionTypes.SIGN_IN_SUCCESS, user });\r\nconst signinFail = error => ({ type: actionTypes.SIGN_IN_FAIL, error });\r\n\r\n//Fetch action states\r\nconst fetchEntriesStart = () => ({ type: actionTypes.FETCH_ENTRIES_START});\r\nconst fetchEntriesSuccess = entries => ({ type: actionTypes.FETCH_ENTRIES_SUCCESS, entries });\r\nconst fetchEntriesFail = error => ({ type: actionTypes.FETCH_ENTRIES_FAIL, error });\r\n\r\n//Post action states\r\nconst postEntryStart = () => ({ type: actionTypes.POST_ENTRY_START });\r\nconst postEntrySuccess = () => ({ type: actionTypes.POST_ENTRY_SUCCESS });\r\nconst postEntryFail = error => ({ type: actionTypes.POST_ENTRY_FAIL, error});\r\n\r\n//Edit action states\r\nconst editEntryStart = () => ({ type: actionTypes.POST_EDIT_START });\r\nconst editEntrySuccess = () => ({ type: actionTypes.POST_EDIT_SUCCESS });\r\nconst editEntryFail = error => ({ type: actionTypes.POST_EDIT_FAIL, error});\r\n\r\n//Delete action states \r\nconst deletePostStart = () => ({ type: actionTypes.DELETE_POST_START });\r\nconst deletePostSuccess = () => ({ type: actionTypes.DELETE_POST_SUCCESS });\r\nconst deletePostFail = error => ({ type: actionTypes.DELETE_POST_FAIL, error});\r\n\r\n//Show popup state\r\nconst showPopupState = value => ({type: actionTypes.SHOW_POPUP, value});\r\n//Toggle isEditing state\r\nconst setIsEditing = value => ({ type: actionTypes.SET_IS_EDITING, value });\r\n//update viewport state\r\nconst updateViewportState = nextViewport => ({ type: actionTypes.UPDATE_VIEWPORT, nextViewport });\r\n//Upate form data state\r\nconst updateFormData = (fieldName, newValue) => ({ type: actionTypes.UPDATE_FORM_DATA, fieldName, newValue });\r\n//Set add entry location state\r\nconst addEntryLocationState = location => ({ type: actionTypes.SET_ADD_ENTRY_LOCATION, location });\r\n//Clear form data\r\nconst clearFormData = () => ({ type: actionTypes.CLEAR_FORM_DATA });\r\n//Close notification\r\nconst closeNotification = () => ({ type: actionTypes.CLOSE_NOTIFICATION });\r\n\r\n//Show popup action handler \r\nexport const showPopupHandler = value => dispatch => dispatch(showPopupState(value));\r\n\r\n//Handle Drawer \r\nexport const toggleDrawer = (open) => dispatch => dispatch({type: actionTypes.TOGGLE_USER_DRAWER, open});\r\n\r\n//Set isEditing\r\nexport const setIsEditingAction = value => dispatch => dispatch(setIsEditing(value));\r\n\r\n//Clear form field data\r\nexport const clearFormFeilds = () => dispatch => dispatch(clearFormData());\r\n\r\n//Update viewport\r\nexport const updateViewport = nextViewport => dispatch => dispatch(updateViewportState(nextViewport)); \r\n\r\n//Update form fields\r\nexport const updateFormFieldValue = (fieldName, value) => dispatch => dispatch(updateFormData(fieldName, value));\r\n\r\n//Set add entry locations \r\nexport const setAddEntryLocation = location => dispatch => dispatch(addEntryLocationState(location));\r\n\r\n//Close Notification action\r\nexport const handleCloseNotification = () => dispatch => dispatch(closeNotification());\r\n\r\n//---ACTION CREATORS---\r\nexport const getAuth = () => dispatch => {\r\n    dispatch(authStart());\r\n    api.getAuth\r\n    .then(({ data }) => {\r\n        console.log(data);\r\n        dispatch(authSuccess(data));\r\n    })\r\n    .catch(err => {\r\n        console.log(err);\r\n        dispatch(authFail(err));\r\n    });\r\n};\r\n\r\n//Signin/Signout action creator\r\nexport const signInAndSignOutAction = (details, isSignup) => dispatch => {\r\n    dispatch(signinStart());\r\n    if(isSignup){\r\n        return api.signUp(details)\r\n        .then(({ data }) => {\r\n            console.log(data)\r\n            dispatch(signinSuccess(data));\r\n        })\r\n        .catch(err => {\r\n            const errorMsg = err.response.data.msg\r\n            console.log({...err});\r\n            dispatch(signinFail(errorMsg));\r\n        });\r\n    }\r\n    api.signIn(details)\r\n    .then(({ data }) => {\r\n        console.log(data);\r\n        localStorage.setItem('token', data.token);\r\n        dispatch(signinSuccess(data));\r\n    })\r\n    .catch(err => {\r\n        if(err.response){\r\n            const errorMsg = err.response.data.msg\r\n            console.log(errorMsg);\r\n            dispatch(signinFail(errorMsg));\r\n            return;\r\n        }\r\n        console.log({...err});\r\n        dispatch(signinFail('An errorr occured!'));\r\n    });\r\n}\r\n\r\n// Sign out action creator\r\nexport const signOutAction = () => dispatch => {\r\n    dispatch(signinStart());\r\n    api.signOut\r\n    .then(({ data }) => {\r\n        console.log(data);\r\n        localStorage.removeItem('token');\r\n        dispatch(signinSuccess(data));\r\n    })\r\n    .catch(err => {\r\n        if(err.response){\r\n            const errorMsg = err.response.data.msg\r\n            console.log(errorMsg);\r\n            dispatch(signinFail(errorMsg));\r\n            return;\r\n        }\r\n        console.log({...err});\r\n        dispatch(signinFail('An errorr occured!'));\r\n    });\r\n}\r\n\r\n//Fetch action creator\r\nexport const fetchEntriesAction = () => {\r\n    return dispatch => {\r\n        console.log('FETCH HAS BEEN CALLED!');\r\n        dispatch(fetchEntriesStart());\r\n        //GET request to the api\r\n        api.fetchLogEntries\r\n        .then(({ data }) => {\r\n            console.log(data);\r\n            dispatch(fetchEntriesSuccess(data));\r\n        })\r\n        .catch(err => {\r\n            dispatch(fetchEntriesFail(err));\r\n        });\r\n    };\r\n};\r\n\r\n//Post action creator\r\nexport const postEntryAction = entry => {\r\n    return dispatch => {\r\n        dispatch(postEntryStart());\r\n        //POST request to the api\r\n        api.postNewLogEntry(entry)\r\n        .then(({ data }) => {\r\n            console.log('Added new entry successfully');\r\n            dispatch(postEntrySuccess());\r\n            dispatch(fetchEntriesSuccess(data));\r\n        })\r\n        .catch(err => {\r\n            console.log('IT IS SUPPOSED TO PASS!');\r\n            console.log(err);\r\n            dispatch(postEntryFail('Could not post entry!'));\r\n            history.push('/home');\r\n        });\r\n    }\r\n}\r\n\r\n//Post Edit action creator\r\nexport const editEntryAction = editedEntry => {\r\n    return dispatch => {\r\n        dispatch(editEntryStart());\r\n        api.editPost(editedEntry)\r\n        .then(({ data }) => {\r\n            console.log(data);\r\n            dispatch(editEntrySuccess());\r\n            dispatch(fetchEntriesSuccess(data));\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n            dispatch(editEntryFail('Failed to edit this post'));\r\n        });\r\n    }\r\n}\r\n\r\n//Delete action creator\r\nexport const deletePostAction = id => {\r\n    return dispatch => {\r\n        dispatch(deletePostStart());\r\n        return api.deletePost(id)\r\n        .then(({ data }) => {\r\n            dispatch(deletePostSuccess());\r\n            dispatch(fetchEntriesSuccess(data));\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n            dispatch(deletePostFail('Failed to delete post'));\r\n        });\r\n    }\r\n}\r\n\r\n//GO TO REDUCER","export const objectUpdate = (prevObject, currObject) => ({...prevObject, ...currObject});\r\n\r\nexport const arrayUpdate = (prevArray, currArray) => ([...prevArray, ...currArray]);\r\n\r\nexport const initFormData = {\r\n    title: '',\r\n    description: '',\r\n    comments: '',\r\n    image: '',\r\n    rating: 1,\r\n    latitude: 0,\r\n    longitude: 0,\r\n    zoom: 2.5,\r\n    visitDate: ''\r\n}\r\n\r\nexport const initViewport = {\r\n    width: '100vw',\r\n    height: '100vh',\r\n    latitude: 4.175184,\r\n    longitude: 19.508201,\r\n    zoom: 2.5\r\n}","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Card, ListItemIcon, CardMedia, CardContent, Typography, IconButton, Divider, Box } from '@material-ui/core'\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport { Edit, Delete, LocationOn } from '@material-ui/icons';\r\n\r\nimport useStyles from './styles';\r\nimport { setIsEditingAction, updateViewport, deletePostAction } from '../../../store/actions/entries';\r\nimport { initViewport } from '../../../utility';\r\n\r\nconst Post = ({ postDetails }) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [ zoomed, setZoomed ] = useState(false);\r\n\r\n  const zoomIn = () => {\r\n    if(zoomed){\r\n      dispatch(updateViewport(initViewport));\r\n      setZoomed(false);\r\n      return;\r\n    }\r\n    const view = {\r\n      zoom: postDetails.zoom,\r\n      longitude: postDetails.longitude,\r\n      latitude: postDetails.latitude\r\n    }\r\n    dispatch(updateViewport(view));\r\n    setZoomed(true);\r\n  }\r\n\r\n  const deletePost = async id => {\r\n    //delete post\r\n    dispatch(deletePostAction(id));\r\n  }\r\n\r\n  const showEditForm = () => {\r\n    dispatch(setIsEditingAction(true));\r\n  };\r\n\r\n  return (\r\n    <Card className={classes.root} style={{backgroundColor: '#292929', margin: -12}}>\r\n      {postDetails.image ? <CardMedia\r\n          className={classes.media}\r\n          image={postDetails.image}\r\n          title={postDetails.title}\r\n        /> : null}\r\n      <CardContent className={classes.cardBody}>\r\n        <ListItemIcon >\r\n          <div onClick={zoomIn}>\r\n            <LocationOn color=\"error\" style={{paddingRight: '10px'}}/>\r\n          </div>\r\n          <Typography variant=\"h5\" color=\"textPrimary\" component=\"p\">\r\n              {postDetails.title}\r\n          </Typography>\r\n        </ListItemIcon>\r\n        <Divider className={classes.divider} style={{backgroundColor: '#555'}}/>\r\n        {/* <ListItemIcon> */}\r\n          <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\" style={{color: '#555'}}>\r\n            {/* <DateRange style={{fontSize: '15px', paddingRight: '10px'}}/> */}\r\n              Visited on {postDetails.visitDate.split('T')[0]}\r\n          </Typography>\r\n        {/* </ListItemIcon> */}\r\n        <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\" style={{padding: 5}}>\r\n            {postDetails.description}\r\n        </Typography>\r\n        <Typography variant=\"body1\" color=\"textPrimary\" component=\"p\" style={{padding: 5}}>\r\n            {postDetails.comments}\r\n        </Typography>\r\n        <Divider className={classes.divider} style={{backgroundColor: '#555'}}/>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            Rating\r\n        </Typography>\r\n        <Box component=\"fieldset\" mb={-1} borderColor=\"transparent\" width=\"100%\" alignItems=\"left\">\r\n            <Rating value={postDetails.rating} readOnly max={10}/>\r\n        </Box>\r\n      </CardContent>\r\n      <IconButton onClick={showEditForm}>\r\n        <Edit style={{color: 'blue'}}/>\r\n      </IconButton>\r\n      <IconButton onClick={deletePost.bind(this, postDetails._id)}>\r\n        <Delete color=\"error\"/>\r\n      </IconButton>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Post;","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n      opacity: 1.5\r\n    },\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(1),\r\n    opacity: 1.5\r\n  },\r\n  form: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center',\r\n    maxWidth: 400\r\n  },\r\n  fileInput: {\r\n    width: '97%',\r\n    margin: '10px 0',\r\n  },\r\n  buttonSubmit: {\r\n    marginBottom: 10,\r\n    backgroundColor: '#f8c102',\r\n    color: '#fff'\r\n  },\r\n  disabledButton: {\r\n    backgroundColor: '#fff2c5'\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  withoutLabel: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  textField: {\r\n    width: '100%',\r\n  }\r\n}));","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport FileBase from 'react-file-base64';\r\nimport { TextField, Button, Typography, Paper, Box } from '@material-ui/core';\r\nimport Rating from '@material-ui/lab/Rating';\r\n\r\nimport useStyles from './styles';\r\nimport { setIsEditingAction, updateFormFieldValue, clearFormFeilds, postEntryAction, editEntryAction } from '../../store/actions/entries';\r\n\r\nconst Form = props => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const state = useSelector(state => state.entriesState);\r\n    \r\n      useEffect(() => {\r\n        if(state.isEditing){\r\n            // console.log(props.oldData);\r\n            for(let field in props.oldData){\r\n                // console.log(field + ' ' + props.oldData[field]);\r\n                dispatch(updateFormFieldValue(field, props.oldData[field]));\r\n            }\r\n            // console.log(state.formEntryData);\r\n        }else{\r\n            dispatch(updateFormFieldValue('zoom', state.viewport.zoom));\r\n            dispatch(updateFormFieldValue('longitude', props.longitude));\r\n            dispatch(updateFormFieldValue('latitude', props.latitude));\r\n        }\r\n    }, [dispatch, props.latitude, props.longitude, props.oldData, state.isEditing, state.viewport.zoom]);\r\n\r\n    \r\n    const handleSubmit = async e => {\r\n        e.preventDefault();\r\n        if(state.isEditing){\r\n            return editPost();\r\n        }\r\n        const newPost = {\r\n            ...state.formEntryData,\r\n            zoom: state.viewport.zoom\r\n        }\r\n        dispatch(postEntryAction(newPost));\r\n    }\r\n\r\n    const editPost = async ()=> {\r\n        const editedEntry = {\r\n            ...props.oldData,\r\n            ...state.formEntryData\r\n        }\r\n        dispatch(editEntryAction(editedEntry));\r\n    }\r\n\r\n    const clear = () => {\r\n        if(state.isEditing){\r\n            dispatch(setIsEditingAction(false));\r\n        }\r\n        dispatch(clearFormFeilds());\r\n    }\r\n\r\n    \r\n    const isValid = () => {\r\n        let valid = false;\r\n        if(state.formEntryData.image !== '' && state.formEntryData.title !== '' && state.formEntryData.comments !== ''){\r\n            valid = true;\r\n        }else if(props.oldData !== state.formEntryData){\r\n            valid = false;\r\n        }\r\n        return valid;\r\n    }\r\n    \r\n    const onChangeEntry = (event, name) => {\r\n        switch(name){\r\n            case 'rating':\r\n                const rating = parseInt(event.target.value);\r\n                return dispatch(updateFormFieldValue(name, rating));\r\n            case 'image': \r\n                return dispatch(updateFormFieldValue('image', event));\r\n            default:\r\n                event.preventDefault();\r\n                return dispatch(updateFormFieldValue(name, event.target.value));\r\n        }\r\n    }\r\n    return(\r\n        <Paper className={classes.paper}  style={{backgroundColor: '#292929', margin: -12}}>\r\n            <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\r\n                <Typography variant=\"h6\">{props.isEditing ? 'Edit Visit' : 'Create Visit'}</Typography>\r\n                <TextField \r\n                    name=\"title\" \r\n                    variant=\"outlined\" \r\n                    label=\"Title\" \r\n                    fullWidth\r\n                    value={state.formEntryData.title}\r\n                    onChange={event => onChangeEntry(event, 'title')}/>\r\n                <TextField \r\n                    name=\"description\" \r\n                    variant=\"outlined\" \r\n                    label=\"Description (Optional)\" \r\n                    fullWidth\r\n                    value={state.formEntryData.description}\r\n                    onChange={event =>  onChangeEntry(event, 'description')}/>\r\n                <TextField \r\n                    name=\"comments\" \r\n                    variant=\"outlined\" \r\n                    label=\"Comments\" \r\n                    fullWidth\r\n                    value={state.formEntryData.comments}\r\n                    onChange={event =>  onChangeEntry(event, 'comments')}/>\r\n                <TextField\r\n                    name=\"visitDate\"\r\n                    label={props.isEditing ? 'Change Visit Date?' : 'Visit Date'}\r\n                    type=\"date\"\r\n                    fullWidth\r\n                    className={classes.textField}\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    value={state.formEntryData.visitDate}\r\n                    onChange={event =>  onChangeEntry(event, 'visitDate')}\r\n                />\r\n\r\n                <div className={classes.fileInput}>\r\n                    <Typography>{props.isEditing ? 'Choose a different image' : 'Choose an image'}</Typography>\r\n                    <FileBase \r\n                        type=\"file\"\r\n                        multiple={false}\r\n                        value={state.formEntryData.image}\r\n                        onDone={({base64}) => onChangeEntry(base64, 'image')}\r\n                        />\r\n                </div>\r\n\r\n                <Box component=\"fieldset\" mb={3} borderColor=\"transparent\" >\r\n                    <Typography component=\"legend\" align=\"center\">Rate Your Visit!</Typography>\r\n                    <Rating \r\n                        name=\"image\" \r\n                        defaultValue={1} \r\n                        value={state.formEntryData.rating} \r\n                        max={10} \r\n                        onChange={rating =>  onChangeEntry(rating, 'rating')}/>\r\n                </Box>\r\n\r\n                <Button \r\n                    className={classes.buttonSubmit} \r\n                    variant=\"contained\"\r\n                    fullWidth size=\"large\" \r\n                    type=\"submit\"\r\n                    disabled={!isValid() || state.loading}>\r\n                        {\r\n                            state.loading ?\r\n                            'Loading...'\r\n                            :\r\n                            state.isEditing ? 'Post Edit' : 'Add a Visit'\r\n                        }\r\n                    </Button>\r\n                <Button \r\n                    variant=\"contained\" \r\n                    color=\"secondary\" \r\n                    size=\"small\" \r\n                    onClick={clear} \r\n                    fullWidth>{state.isEditing ? 'Cancel editing mode' : 'Clear'}</Button>\r\n            </form>\r\n        </Paper>\r\n    );\r\n}\r\nexport default Form;","import React from 'react';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { showPopupHandler } from '../store/actions/entries';\r\n\r\nconst PinIcon = props => {\r\n    const dispatch = useDispatch();\r\n    const state = useSelector(state => state.entriesState);\r\n    // console.log(state.viewport);\r\n    const showPopup = () => {\r\n        if(props.isAddMarker){\r\n            return;\r\n        }\r\n        if(state.showPopup[props.id]){\r\n            // console.log(state.showPopup);\r\n            return dispatch(showPopupHandler({}));\r\n        }\r\n        dispatch(showPopupHandler({[props.id]: true}));\r\n    }\r\n    const size = state.viewport.zoom < 4 ? `20px` : '40px';\r\n    return (\r\n        <div \r\n            onClick={showPopup} >\r\n            <svg \r\n            style={{\r\n                width: size,\r\n                height: size,\r\n                stroke: props.color,\r\n                transform: 'translate(-50%, -100%)'\r\n                }}\r\n            viewBox=\"0 0 24 24\" \r\n            strokeWidth=\"2\" \r\n            fill=\"none\" \r\n            strokeLinecap=\"round\" \r\n            strokeLinejoin=\"round\" >\r\n                <path d=\"M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z\"></path>\r\n                <circle cx=\"12\" cy=\"10\" r=\"3\"></circle>\r\n            </svg>\r\n        </div>\r\n    );\r\n}\r\n\r\n// ${8 * state.viewport.zoom}\r\nexport default PinIcon;","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Marker, Popup } from 'react-map-gl';\r\nimport Post from './Post/Post';\r\nimport Form from '../Forms/entryForm';\r\nimport PinIcon from '../../svg/PinIcon';\r\nimport { showPopupHandler, updateViewport } from '../../store/actions/entries';\r\nimport { initViewport } from '../../utility';\r\n\r\nconst Posts = props => {\r\n    const state = useSelector(state => state.entriesState);\r\n    const dispatch = useDispatch();\r\n    let markers = null;\r\n\r\n    const closePopup = () => {\r\n        const view = {\r\n          zoom: initViewport.zoom,\r\n          longitude: initViewport.longitude,\r\n          latitude: initViewport.latitude\r\n        }\r\n        dispatch(updateViewport(view));\r\n        dispatch(showPopupHandler({}))\r\n    }\r\n\r\n    if(state.entries.length > 0){\r\n        markers = (\r\n            state.entries.map(entry => (\r\n            <div key={entry._id} >\r\n                <Marker\r\n                latitude={entry.latitude} \r\n                longitude={entry.longitude}>\r\n                    <PinIcon \r\n                    id={entry._id}\r\n                    color=\"#f8c102\"\r\n                    />\r\n                </Marker>\r\n                {\r\n                state.showPopup[entry._id] ?\r\n                <Popup\r\n                    latitude={entry.latitude} \r\n                    longitude={entry.longitude} \r\n                    closeButton={true}\r\n                    sortByDepth\r\n                    closeOnClick={false}\r\n                    dynamicPosition\r\n                    onClose={closePopup}\r\n                    anchor=\"top\" >\r\n                    {state.isEditing ? \r\n                    <Form oldData={entry}/> \r\n                    : <Post postDetails={entry} />\r\n                    }\r\n                </Popup> :\r\n                null\r\n                }\r\n                </div>\r\n            ))\r\n        );\r\n    }\r\n    return (\r\n        <>\r\n            {markers}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Posts;","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Marker, Popup } from 'react-map-gl';\r\n\r\nimport { setAddEntryLocation } from '../../store/actions/entries';\r\nimport PinIcon from '../../svg/PinIcon';\r\nimport Form from '../Forms/entryForm';\r\n\r\nconst AddMarker = () => {\r\n    const dispatch = useDispatch();\r\n    const state = useSelector(state => state.entriesState);\r\n    let addMarker = null;\r\n    if(state.addEntryLocation){\r\n        addMarker = (\r\n        <>\r\n            <Marker \r\n            latitude={state.addEntryLocation.latitude} \r\n            longitude={state.addEntryLocation.longitude}>\r\n                <PinIcon \r\n                color=\"rgb(243, 99, 99)\" \r\n                viewport={state.viewport} \r\n                isAddMarker/>\r\n            </Marker>\r\n            <Popup\r\n                latitude={state.addEntryLocation.latitude} \r\n                longitude={state.addEntryLocation.longitude}\r\n                closeButton={true}\r\n                closeOnClick={false}\r\n                dynamicPosition\r\n                onClose={() => dispatch(setAddEntryLocation(null))}\r\n                anchor=\"top\" \r\n                >\r\n                <Form \r\n                    latitude={state.addEntryLocation.latitude} \r\n                    longitude={state.addEntryLocation.longitude}\r\n                />\r\n            </Popup>\r\n        </>\r\n        );\r\n    }\r\n    return addMarker;\r\n};\r\n\r\nexport default AddMarker;","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nimport { handleCloseNotification } from '../../store/actions/entries';\r\n\r\nconst Notify = props => {\r\n    const dispatch = useDispatch();\r\n    \r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n        return;\r\n        }\r\n        dispatch(handleCloseNotification());\r\n    };\r\n    return (\r\n        <Snackbar open={props.open} autoHideDuration={props.duration} onClose={handleClose}>\r\n            <MuiAlert \r\n                elevation={6} \r\n                variant=\"filled\"\r\n                severity={props.severity} >\r\n                    {props.message}\r\n                </MuiAlert>\r\n        </Snackbar>\r\n    );\r\n}\r\n\r\nexport default Notify;","import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport ReactMapGL, { NavigationControl } from 'react-map-gl';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { LinearProgress } from '@material-ui/core';\r\nimport { withRouter } from 'react-router';\r\n\r\nimport Posts from '../components/Posts/Posts';\r\nimport { fetchEntriesAction, updateViewport, setAddEntryLocation, clearFormFeilds } from '../store/actions/entries';\r\nimport AddMarker from '../components/Markers/AddMarker';\r\nimport Notify from '../components/Notify/Notify';\r\n\r\nconst Map = ({ children }) => { \r\n    const state = useSelector(state => state.entriesState);\r\n    const [ longitudeState, setLongitudeState ] = React.useState(-100.508201);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if(!state.isAuthenticated){\r\n            return setInterval(() => {\r\n               setLongitudeState(longitudeState => {\r\n                   if(longitudeState < 160.00){\r\n                       return longitudeState + 0.05\r\n                   }else {\r\n                       return -100.508201;\r\n                   }\r\n               })\r\n            }, 50);\r\n        }\r\n        console.log('FETCHED....');\r\n        dispatch(fetchEntriesAction());\r\n        return () => {\r\n            clearInterval();\r\n        }\r\n    }, [dispatch, state.isAuthenticated]);\r\n    \r\n    const getViewPort = nextViewport => {\r\n        const view = {\r\n            zoom: nextViewport.zoom,\r\n            latitude: nextViewport.latitude,\r\n            longitude: nextViewport.longitude\r\n        }\r\n        setLongitudeState(nextViewport.longitude);\r\n        dispatch(updateViewport(view));\r\n    }\r\n\r\n    const showAddMarkerPopup = event => {\r\n        const [ longitude, latitude ] = event.lngLat;\r\n        if(!state.isAuthenticated){\r\n            return;\r\n        }\r\n        dispatch(clearFormFeilds());\r\n        dispatch(setAddEntryLocation({ longitude, latitude }));\r\n    }\r\n\r\n    let loading = null;\r\n    let notification = null;\r\n    if(state.notification.open){\r\n        notification = (\r\n            <Notify {...state.notification}/>\r\n        );\r\n    }\r\n    \r\n    if(state.loading){\r\n        loading = <LinearProgress color={'secondary'} style={{backgroundColor: '#f8c102', color: '#e7cf78', zIndex: 1020}}/>;\r\n    }\r\n\r\n    return (\r\n        <ReactMapGL\r\n        {...state.viewport }\r\n        longitude={!state.isAuthenticated ? longitudeState : state.viewport.longitude}\r\n        mapStyle=\"mapbox://styles/loucharl/ckju0bzij0gd419qn94vjiiqy\"\r\n        mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_TOKEN}\r\n        onViewportChange={nextViewport => getViewPort(nextViewport)}\r\n        onDblClick={event => showAddMarkerPopup(event)} dragPan\r\n        >\r\n        {loading}\r\n        {notification}\r\n        <div style={{position: 'absolute', right: 0, backgroundColor: '#555'}}>\r\n          <NavigationControl showCompass={true}/>\r\n        </div>\r\n        { children }\r\n        <Posts />\r\n        <AddMarker />\r\n    </ReactMapGL>\r\n    );\r\n}\r\n\r\nexport default withRouter(Map);","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { Fab } from '@material-ui/core';\r\nimport { AccountCircle } from '@material-ui/icons';\r\nimport { toggleDrawer } from '../../store/actions/entries';\r\n\r\nconst FloatingUser = () => {\r\n    const { openDrawer, loading } = useSelector(state => state.entriesState);\r\n    const dispatch = useDispatch();\r\n    const btn = (\r\n        <div style={{ position: 'absolute', left: 10, top: 10 }}>\r\n            <Fab variant=\"extended\" onClick={() => dispatch(toggleDrawer(openDrawer))} style={{padding: '0px 15px'}}>\r\n                <AccountCircle />\r\n                Account\r\n            </Fab>\r\n        </div>\r\n    );\r\n\r\n    return loading ? null : btn;\r\n}\r\n\r\nexport default FloatingUser;","export default __webpack_public_path__ + \"static/media/logo.75ab7856.png\";","\r\nimport React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport { List, Typography, Divider, IconButton, ListItem, ListItemIcon, ListItemText, Avatar, Collapse } from '@material-ui/core';\r\nimport { ChevronLeft, ChevronRight, ExpandLess, ExpandMore, ExitToAppRounded } from '@material-ui/icons';\r\n\r\nimport { toggleDrawer, signOutAction, showPopupHandler, updateViewport } from '../../store/actions/entries';\r\n\r\nimport logo from './logo.png';\r\n\r\nlet drawerWidth = 360;\r\n\r\nif(window.innerWidth < 700){\r\n  drawerWidth = 260;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    backgroundColor: '#292929'\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n    backgroundColor: '#292929'\r\n  },\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(0,3),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: 'flex-end',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginLeft: -drawerWidth,\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginLeft: 0,\r\n  },\r\n  nested: {\r\n    paddingLeft: theme.spacing(4),\r\n  },\r\n}));\r\n\r\nconst UserInfo = () => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const { user, entries, openDrawer } = useSelector(state => state.entriesState);\r\n  const dispatch = useDispatch();\r\n  // const [collapse, setCollapse] = React.useState(false);\r\n  const [values, setValues] = React.useState({\r\n    collapseUser: false,\r\n    entriesCollapse: true\r\n  });\r\n\r\n  const handleValueChange = (name, value) => {\r\n    setValues(() => ({\r\n      ...values,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  const logOut = () => {\r\n    dispatch(signOutAction());\r\n  }\r\n\r\n  const showPost = entry => {\r\n    const view = {\r\n      longitude: entry.longitude,\r\n      latitude: entry.latitude\r\n    }\r\n    dispatch(toggleDrawer(openDrawer));\r\n    dispatch(updateViewport(view));\r\n    dispatch(showPopupHandler({[entry._id]: true}));\r\n  }\r\n\r\n  return(\r\n      <Drawer\r\n      className={classes.drawer}\r\n      variant=\"persistent\"\r\n      anchor=\"left\"\r\n      open={openDrawer}\r\n      classes={{\r\n        paper: classes.drawerPaper,\r\n      }}\r\n    >\r\n      {/* HEADER */}\r\n      <List>\r\n        <ListItem button={false}>\r\n          <ListItemIcon><img alt=\"TravelLog\" src={logo} style={{ width: 30, height: 30 }} /></ListItemIcon>\r\n          <ListItemText primary={<Typography variant=\"h6\">MapLogs</Typography>} />\r\n          <IconButton onClick={() => dispatch(toggleDrawer(openDrawer))}>\r\n            {theme.direction === 'ltr' ? <ChevronLeft color=\"primary\"/> : <ChevronRight />}\r\n          </IconButton>\r\n        </ListItem>\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        {/* USER */}\r\n        <ListItem button onClick={() => handleValueChange('collapseUser', !values.collapseUser)}>\r\n          <ListItemText primary={user.name} secondary={user.email}/>\r\n          {values.collapseUser ? <ExpandLess /> : <ExpandMore />}\r\n        </ListItem>\r\n        <Collapse in={values.collapseUser} timeout=\"auto\" unmountOnExit>\r\n          <List component=\"div\" disablePadding>\r\n            <ListItem button className={classes.nested} onClick={logOut}>\r\n              <ListItemIcon><ExitToAppRounded color=\"secondary\"/></ListItemIcon>\r\n              <ListItemText primary=\"Log Out\" />\r\n            </ListItem>\r\n          </List>\r\n        </Collapse>\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        <ListItem button onClick={() => handleValueChange('entriesCollapse', !values.entriesCollapse)}>\r\n          <ListItemText primary=\"Previous Travels\" secondary={entries.length + ' Travel(s)'}/>\r\n          {values.entriesCollapse ? <ExpandLess /> : <ExpandMore />}\r\n        </ListItem>\r\n        <Collapse in={values.entriesCollapse} timeout=\"auto\" unmountOnExit>\r\n          <List component=\"div\" disablePadding>\r\n          {entries.map(entry => (\r\n            <ListItem key={entry._id} button className={classes.nested} onClick={() => showPost(entry)}>\r\n              <Avatar src={entry.image} alt={entry.title} />\r\n              <ListItemText secondary={entry.title} style={{ marginLeft: 10, color: '#000' }}/>\r\n            </ListItem>\r\n          ))}\r\n          </List>\r\n        </Collapse>\r\n      </List>\r\n    </Drawer>\r\n\r\n  );\r\n}\r\n\r\nexport default UserInfo;","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { withRouter } from 'react-router';\r\nimport Map from './Map';\r\nimport FloatingUser from '../components/UserInfo/FloatingUser';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport UserInfo from '../components/UserInfo/UserInfo';\r\nimport BackDrop from '@material-ui/core/Backdrop';\r\nimport { toggleDrawer } from '../store/actions/entries';\r\n\r\nconst Home = () => { \r\n    const { openDrawer, loading } = useSelector(state => state.entriesState);\r\n    const dispatch = useDispatch();\r\n    const backHandler = () => {\r\n        if(loading){\r\n            return;\r\n        }\r\n        dispatch(toggleDrawer(openDrawer));\r\n    }\r\n    return (\r\n        <>\r\n            <Map />\r\n            <FloatingUser />\r\n            <UserInfo />\r\n            <BackDrop open={openDrawer || loading} style={{zIndex: 1000}} onClick={backHandler}>\r\n                {loading ? <Typography variant=\"h4\">Loading...</Typography> : null}\r\n            </BackDrop>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default withRouter(Home);","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { withRouter } from 'react-router';\r\n\r\nimport { Typography, Grid, TextField, Button, Checkbox, FormControlLabel } from '@material-ui/core';\r\nimport { Visibility, VisibilityOff } from '@material-ui/icons';\r\nimport useStyles from './styles';\r\nimport { signInAndSignOutAction } from '../../store/actions/entries';\r\n\r\nconst SignInForm = ({ isSignup, history }) => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    \r\n    const [values, setValues] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: '',\r\n        showPassword: false\r\n    });\r\n\r\n    const handleFormSubmittion = event => {\r\n        event.preventDefault();\r\n        if(isSignup){\r\n            const details = {\r\n                name: values.name,\r\n                email: values.email,\r\n                password: values.password,\r\n                confirmPassword: values.confirmPassword\r\n            }\r\n            return dispatch(signInAndSignOutAction(details, isSignup));\r\n        }\r\n        const details = {\r\n            email: values.email,\r\n            password: values.password\r\n        }\r\n        dispatch(signInAndSignOutAction(details, isSignup));\r\n    }\r\n    \r\n    const handleChange = (prop) => (event) => {\r\n        setValues({ ...values, [prop]: event.target.value });\r\n    };\r\n\r\n    const handleClickShowPassword = () => {\r\n        setValues({ ...values, showPassword: !values.showPassword });\r\n    };\r\n\r\n    const handleOtherButton = () => {\r\n        setValues({\r\n            name: '',\r\n            email: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n            showPassword: false\r\n        });\r\n        if(isSignup){\r\n            history.push('/auth');\r\n        }else{\r\n            history.push('/auth/create-account');\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div style={{width: '100%', backgroundColor: '#292929', margin: '10% auto'}}>\r\n            <Grid container direction=\"row\" style={{  margin: '1em auto' }}>\r\n                <form \r\n                    autoComplete=\"off\" \r\n                    noValidate\r\n                    onSubmit={event => handleFormSubmittion(event)} \r\n                    className={`${classes.root} ${classes.form}`} \r\n                    style={{margin: '0 auto', width: '100%'}}>\r\n\r\n                    <Typography variant=\"h4\" style={{margin: '1em auto'}}>\r\n                        {isSignup ? 'Create a new account' : 'Sign in to your account'}\r\n                    </Typography>\r\n\r\n                    {isSignup ?\r\n                        <TextField \r\n                            name=\"name\" \r\n                            variant=\"outlined\" \r\n                            type=\"text\"\r\n                            label=\"Full Name\" \r\n                            fullWidth\r\n                            placeholder=\"Enter full name\"\r\n                            value={values.name}\r\n                            onChange={handleChange('name')}/>\r\n                        : null\r\n                    }\r\n\r\n                    <TextField \r\n                        name=\"email\" \r\n                        variant=\"outlined\" \r\n                        label=\"Email\" \r\n                        type=\"email\"\r\n                        fullWidth\r\n                        placeholder={isSignup ? 'Enter a valid email address' : 'Email address'}\r\n                        color=\"warning\"\r\n                        style={{ color: '#fff' }}\r\n                        value={values.email}\r\n                        onChange={handleChange('email')}\r\n                        />\r\n\r\n                    <TextField \r\n                        name=\"password\" \r\n                        variant=\"outlined\" \r\n                        type={values.showPassword ? 'text' : 'password'}\r\n                        label=\"Password\" \r\n                        fullWidth\r\n                        placeholder={isSignup ? 'Create password' : 'Password'}\r\n                        value={values.password}\r\n                        onChange={handleChange('password')}/>\r\n                    \r\n                    {isSignup ?\r\n                        <TextField \r\n                            name=\"confirmPassword\" \r\n                            variant=\"outlined\" \r\n                            type={values.showPassword ? 'text' : 'password'}\r\n                            label=\"Confirm password\" \r\n                            fullWidth\r\n                            placeholder=\"Confirm your password\"\r\n                            value={values.confirmPassword}\r\n                            onChange={handleChange('confirmPassword')}/>\r\n                        : null\r\n                    }\r\n                    \r\n                    \r\n                    <FormControlLabel\r\n                        control={\r\n                            <Checkbox icon={<VisibilityOff />}  \r\n                            checkedIcon={<Visibility />} \r\n                            name=\"showPassword\"\r\n                            onChange={handleClickShowPassword} />\r\n                            }\r\n                            label={<Typography component=\"p\" style={{color: '#fff'}}>Show Password</Typography>}\r\n                    />\r\n\r\n                    <div style={{width: '100%', margin: '2em auto'}}>\r\n                        <Button \r\n                            className={classes.buttonSubmit} \r\n                            color=\"primary\"\r\n                            variant=\"contained\"\r\n                            fullWidth size=\"medium\" \r\n                            type=\"submit\">{isSignup ? 'Create account' : 'Sign in'}</Button>\r\n                        <Button \r\n                            variant=\"contained\" \r\n                            color=\"secondary\" \r\n                            size=\"small\" \r\n                            onClick={handleOtherButton}\r\n                            fullWidth>{isSignup ? 'Back to sign in' : 'Create an account'}</Button>\r\n                    </div>\r\n                </form>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(SignInForm);","import React from 'react';\r\nimport Map from './Map';\r\nimport SignInForm from '../components/Forms/SignInForm';\r\n\r\nconst SignIn = ({ isSignup }) => {\r\n    let body = (\r\n        <Map>\r\n            <div style={{\r\n                position: 'absolute',\r\n                left: 0,\r\n                backgroundColor: '#292929', \r\n                height: '100%',\r\n                width: '40%'\r\n                }}>\r\n                <SignInForm isSignup={isSignup}/>\r\n            </div>\r\n        </Map>\r\n    );\r\n    if(window.innerWidth < 1020){\r\n        body = (\r\n            <div style={{\r\n                backgroundColor: '#292929', \r\n                height: '100%',\r\n                width: '100%'\r\n                }}>\r\n                <SignInForm  isSignup={isSignup}/>\r\n            </div>\r\n        )\r\n    }\r\n    return body;\r\n}\r\n\r\nexport default SignIn;","import * as React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Route, Redirect, Switch } from 'react-router';\r\n\r\nimport Home from './containers/Home';\r\nimport SignIn from './containers/SignIn';\r\nimport { getAuth } from './store/actions/entries';\r\nconst App = () => {\r\n  const { isAuthenticated } = useSelector(state => state.entriesState);\r\n  const dispatch = useDispatch();\r\n\r\n  React.useEffect(() => {\r\n    dispatch(getAuth());\r\n  }, [dispatch]);\r\n  \r\n  let routes = (\r\n    <Switch>\r\n      <Route path=\"/auth/create-account\" render={() => <SignIn isSignup />}/>\r\n      <Route path=\"/auth\" component={SignIn}/>\r\n      <Redirect to=\"/auth\" />\r\n    </Switch>\r\n  );\r\n  if(isAuthenticated){\r\n    routes = (\r\n      <Switch>\r\n        <Route path=\"/home\" component={Home}/>\r\n        <Redirect to=\"/home\" />\r\n      </Switch>\r\n    );\r\n  }\r\n  return routes;\r\n}\r\n\r\nexport default App;","import { objectUpdate, initViewport, initFormData } from '../../utility';\r\n\r\n//Pre-sign in state\r\n//Show Popup state\r\nexport const showPopupState = (state, action) => objectUpdate(state, {showPopup: action.value, isEditing: false});\r\n\r\n//Toggle Drawer\r\nexport const toggleDrawer = (state, action) => objectUpdate(state, { openDrawer: !action.open });\r\n\r\n//Set isEditing \r\nexport const setIsEditing = (state, action) => objectUpdate(state, { isEditing: action.value });\r\n\r\n//Clear form data fields \r\nexport const clearFormFeilds = (state, action) => objectUpdate(state, { formEntryData: objectUpdate(state.formEntryData, initFormData) })\r\n\r\n//Update Viewport \r\nexport const updateViewport = (state, action) => objectUpdate(state, { viewport: objectUpdate(state.viewport, action.nextViewport) });\r\n\r\n//Close Notification\r\nexport const closeNotification = (state, action) => {\r\n    return objectUpdate(state, {\r\n        notification: objectUpdate(state.notification, {\r\n            severity: null,\r\n            open: false,\r\n            message: '',\r\n            duration: 0\r\n        })\r\n    });\r\n}\r\n\r\n// update from state\r\nexport const updateFormData = (state, action) => {\r\n    // console.log(action.fieldName + ': ' + action.newValue);\r\n    return objectUpdate(state, { \r\n        formEntryData: objectUpdate(state.formEntryData, {\r\n            [action.fieldName]: action.newValue\r\n        })\r\n    });\r\n};\r\n\r\n//Set add location state\r\nexport const setAddEntryLocation = (state, action) => objectUpdate(state, { addEntryLocation: action.location });\r\n\r\n//Auth state changes\r\nexport const authStart = (state, action) => objectUpdate(state, { loading: true });\r\nexport const authSuccess = (state, action) => objectUpdate(state, { loading: false, ...action.user });\r\nexport const authFail = (state, action) => {\r\n    return objectUpdate(state, { \r\n        loading: false,\r\n        notification : objectUpdate(state.notification, { \r\n            severity: 'error',\r\n            open: true, \r\n            message: 'Check your internet connection!',\r\n            duration: 600000\r\n        })\r\n    });\r\n};\r\n\r\n//Sign in state\r\nexport const signinStart = (state, action) => objectUpdate(state, {loading: true});\r\nexport const signinSuccess = (state, action) => {\r\n    return objectUpdate(state, {\r\n        loading: false, \r\n        notification: objectUpdate(state.notification, { \r\n            open: true, \r\n            message: `Success` ,\r\n            severity: 'success',\r\n            duration: 1000\r\n        }), \r\n        ...action.user\r\n    });\r\n}\r\nexport const signinFail = (state, action) => {\r\n    return objectUpdate(state, { \r\n        loading: false,\r\n        notification : objectUpdate(state.notification, { \r\n            severity: 'error',\r\n            open: true, \r\n            message: action.error,\r\n            duration: 600000\r\n        })\r\n    });\r\n}\r\n\r\n//Fetch Entries state changes\r\nexport const fetchEntriesStart = (state, action) => objectUpdate(state, {loading: true, addEntryLocation: null, entries: []});\r\nexport const fetchEntriesSuccess = (state, action) => {\r\n    return objectUpdate(state, {\r\n        loading: false, \r\n        notification: objectUpdate(state.notification, { \r\n            open: true, \r\n            message: 'Fetched data successfully..' ,\r\n            severity: 'success',\r\n            duration: 1000\r\n        }), \r\n        entries: [...action.entries],\r\n        openDrawer: true\r\n    });\r\n}\r\nexport const fetchEntriesFail = (state, action) => {\r\n    return objectUpdate(state, { \r\n        loading: false,\r\n        notification : objectUpdate(state.notification, { \r\n            severity: 'error',\r\n            open: true, \r\n            message: 'Faild to load data, please check your network connection and try again',\r\n            duration: 600000\r\n        })\r\n    });\r\n}\r\n\r\n//Post Entry state changes\r\nexport const postEntryStart = (state, action) => objectUpdate(state, {loading: true});\r\nexport const postEntrySuccess = (state, action) => {\r\n    return objectUpdate(state, {\r\n        addEntryLocation: null,\r\n        notification: objectUpdate(state.notification, { \r\n            open: true, \r\n            message: 'Posted new Entry successfully..' ,\r\n            severity: 'success',\r\n            duration: 2000\r\n        })\r\n    });\r\n}\r\nexport const postEntryFail = (state, action) => {\r\n    return objectUpdate(state, {\r\n        loading: false, \r\n        notification: objectUpdate(state.notification, { \r\n            open: true, \r\n            message: action.error,\r\n            severity: 'error',\r\n            duration: 2000\r\n        })\r\n    });\r\n}\r\n\r\n//Edit post state changes \r\nexport const editPostStart = (state, action) => objectUpdate(state, { loading: true });\r\nexport const editPostSuccess = (state, action) => {\r\n    return objectUpdate(state, {\r\n        isEditing: false,\r\n        notification: objectUpdate(state.notification, {\r\n            open: true,\r\n            message: 'Edited post successfully..',\r\n            severity: 'success',\r\n            duration: 2000\r\n        })\r\n    });\r\n}\r\nexport const editPostFail = (state, action)  => {\r\n    return objectUpdate(state, {\r\n        loading: false,\r\n        notification: objectUpdate(state.notification, {\r\n            open: true,\r\n            message: action.error,\r\n            severity: 'error',\r\n            duration: 3000\r\n        })\r\n    });\r\n}\r\n\r\n//Delete post state changes \r\nexport const deletePostStart = (state, action) => objectUpdate(state, { loading: true });\r\nexport const deletePostSuccess = (state, action) => {\r\n    return objectUpdate(state, {\r\n        showPopup: {},\r\n        viewport: { ...initViewport },\r\n        notification: objectUpdate(state.notification, {  \r\n            open: true,\r\n            message: 'Deleted post successfully..',\r\n            severity: 'warning',\r\n            duration: 3000\r\n        })\r\n    });\r\n}\r\nexport const deletePostFail = (state, action) => {\r\n    return objectUpdate(state, {\r\n        loading: false,\r\n        notification: objectUpdate(state.notification, {  \r\n            open: true,\r\n            message: 'Failed to delete post',\r\n            severity: 'error',\r\n            duration: 4000\r\n        })\r\n    })\r\n}\r\n","import { initFormData, initViewport } from '../../utility';\r\n\r\nimport * as changes from './changes';\r\n\r\nimport * as actionTypes from '../actionTypes';\r\nconst initialState = {\r\n    isAuthenticated: false,\r\n    user: null,\r\n    entries: [],\r\n    openDrawer: false,\r\n    isEditing: false,\r\n    loading: true,\r\n    error: null,\r\n    notification: {\r\n        severity: null,\r\n        open: false,\r\n        message: '',\r\n        duration: 0\r\n    },\r\n    addEntryLocation: null,\r\n    viewport: { ...initViewport },\r\n    displayViewport: {...initViewport},\r\n    showPopup: {},\r\n    formEntryData: { ...initFormData }\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        //Toggle\r\n        case actionTypes.TOGGLE_USER_DRAWER: return changes.toggleDrawer(state, action);\r\n        case actionTypes.SHOW_POPUP: return changes.showPopupState(state, action);\r\n        case actionTypes.SET_IS_EDITING: return changes.setIsEditing(state, action);\r\n        case actionTypes.CLEAR_FORM_DATA: return changes.clearFormFeilds(state, action);\r\n        case actionTypes.UPDATE_VIEWPORT: return changes.updateViewport(state, action);\r\n        case actionTypes.UPDATE_FORM_DATA: return changes.updateFormData(state, action);\r\n        case actionTypes.CLOSE_NOTIFICATION: return changes.closeNotification(state, action);\r\n        case actionTypes.SET_ADD_ENTRY_LOCATION: return changes.setAddEntryLocation(state, action);\r\n        //Auth\r\n        case actionTypes.GET_AUTH_START: return changes.authStart(state, action);\r\n        case actionTypes.GET_AUTH_SUCCESS: return changes.authSuccess(state, action);\r\n        case actionTypes.GET_AUTH_FAIL: return changes.authFail(state, action);\r\n        //Signin/ signup\r\n        case actionTypes.SIGN_IN_START: return changes.signinStart(state, action);\r\n        case actionTypes.SIGN_IN_SUCCESS: return changes.signinSuccess(state, action);\r\n        case actionTypes.SIGN_IN_FAIL: return changes.signinFail(state, action);\r\n        //Fetch entries \r\n        case actionTypes.FETCH_ENTRIES_START: return changes.fetchEntriesStart(state, action);\r\n        case actionTypes.FETCH_ENTRIES_SUCCESS: return changes.fetchEntriesSuccess(state, action);\r\n        case actionTypes.FETCH_ENTRIES_FAIL: return changes.fetchEntriesFail(state, action);\r\n        //Post new entry\r\n        case actionTypes.POST_ENTRY_START: return changes.postEntryStart(state, action);\r\n        case actionTypes.POST_ENTRY_SUCCESS: return changes.postEntrySuccess(state, action);\r\n        case actionTypes.POST_ENTRY_FAIL: return changes.postEntryFail(state, action);\r\n        //Edit entry\r\n        case actionTypes.POST_EDIT_START: return changes.editPostStart(state, action);\r\n        case actionTypes.POST_EDIT_SUCCESS: return changes.editPostSuccess(state, action);\r\n        case actionTypes.POST_EDIT_FAIL: return changes.editPostFail(state, action);\r\n        //Delete entry\r\n        case actionTypes.DELETE_POST_START: return changes.deletePostStart(state, action);\r\n        case actionTypes.DELETE_POST_SUCCESS: return changes.deletePostSuccess(state, action);\r\n        case actionTypes.DELETE_POST_FAIL: return changes.deletePostFail(state, action);\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nexport default createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      light: '#f8c102',\r\n      main: '#f8c102'\r\n    },\r\n    text: {\r\n      primary: '#fff',\r\n      secondary: '#ccc'\r\n    },\r\n    background: {\r\n      default: '#555'\r\n    }\r\n  },\r\n  typography: {\r\n    fontFamily: ['\"Montserrat\"', 'Open Sans'].join(','),\r\n    h1: {\r\n        fontSize: '4em',\r\n        wordSpacing: '4px',\r\n        letterSpacing: '2px'\r\n    },\r\n    h5:{\r\n      color: '#000'\r\n    },\r\n    h4: {\r\n      wordSpacing: '2px',\r\n      letterSpacing: '1px',\r\n      color: '#f8c102',\r\n      fontSize: '25px',\r\n      textAlign: 'center'\r\n    },\r\n    body1: {\r\n      textTransform: 'capitalize',\r\n      fontWeight: 'bold'\r\n    }\r\n  }\r\n});","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport App from './App';\r\nimport entriesReducer from './store/reducers/entries';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport './index.css';\r\nimport theme from './theme';\r\n\r\nexport const history = require('history').createBrowserHistory();\r\n\r\nconst reducers = combineReducers({\r\n    entriesState: entriesReducer\r\n});\r\n\r\nconst composeEnhancers = process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null || compose;\r\n// const composeEnhancers = compose;\r\n\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nconst app = (\r\n    <Provider store={store}>\r\n        <BrowserRouter>\r\n            <ThemeProvider theme={theme}>\r\n                <App />\r\n            </ThemeProvider>\r\n        </BrowserRouter>\r\n    </Provider>\r\n);\r\n\r\nReactDom.render(app, document.getElementById('root'))"],"sourceRoot":""}